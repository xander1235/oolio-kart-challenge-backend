version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: kart-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schemas/schemas.sql:/docker-entrypoint-initdb.d/01-schemas.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kart-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kart-api
    environment:
      # Application Configuration
      APP_NAME: kart-api
      HOST: 0.0.0.0
      PORT: 8080
      RELEASE_ENV: production
      LOG_LEVEL: info
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_SCHEMA: kart
      DB_SSL_MODE: disable
      DB_MAX_OPEN_CONNS: 25
      DB_MAX_IDLE_CONNS: 5
      DB_CONN_MAX_LIFETIME: 300
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - kart-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  kart-network:
    driver: bridge
